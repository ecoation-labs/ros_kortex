version: '3'

services:
  roscore:
    image: osrf/ros:noetic-desktop-full
    network_mode: host
    command: stdbuf -o L roscore

  kortex:
    build:
      context: .
      dockerfile: dockerfile
    image: ros_kortex_demo_2/kortex:latest
    environment:
      - DISPLAY=${DISPLAY}
      - "QT_X11_NO_MITSHM=1"
    volumes:
      - "/tmp/.X11-unix:/tmp/.X11-unix:rw"
      # - ros_kortex_demo_2:/ros_kortex
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]
    network_mode: host
    depends_on:
      - roscore
    command: roslaunch kortex_driver kortex_driver.launch dof:="6" gripper:="" ip_address:="${IP_ADDRESS}" start_rviz:="false" --wait

  rviz:
    build:
      context: .
      dockerfile: dockerfile
    image: ros_kortex_demo_2/rviz:latest
    environment:
      - DISPLAY=${DISPLAY}
      - "QT_X11_NO_MITSHM=1"
    volumes:
      - "/tmp/.X11-unix:/tmp/.X11-unix:rw"
      # - ros_kortex_demo_2:/ros_kortex
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]
    network_mode: host
    depends_on:
      - roscore
    command: roslaunch kortex_scripts launch_rviz.launch --wait

  rqt:
    build:
      context: .
      dockerfile: dockerfile
    image: ros_kortex_demo_2/rviz:latest
    environment:
      - DISPLAY=${DISPLAY}
      - "QT_X11_NO_MITSHM=1"
    volumes:
      - "/tmp/.X11-unix:/tmp/.X11-unix:rw"
      # - ros_kortex_demo_2:/ros_kortex
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]
    network_mode: host
    depends_on:
      - roscore
    command: rqt

# volumes:
#   ros_kortex_demo:
#    driver: local
#    driver_opts:
#     o: bind
#     type: none
#     device: ../ros_kortex